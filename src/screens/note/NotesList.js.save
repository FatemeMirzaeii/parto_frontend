import React, { useEffect, useState, useLayoutEffect } from 'react';
import { SafeAreaView, Text, FlatList } from 'react-native';
import { FAB } from 'react-native-paper';
import jalaali from 'moment-jalaali';

//redux
import { useSelector } from 'react-redux';

// components
import SearchBar from '../../components/SearchBar';
import BackButton from '../../components/BackButton';
import NoteListItem from './NoteListItem';

//util
import { e2p, a2p } from '../../util/func';

// styles
import { COLOR } from '../../styles/static';
import styles from './styles';

const NotesList = ({ navigation }) => {
  const today = jalaali();
  const [notes, setNotes] = useState([]);
  const [searchInput, setSearchInput] = useState([]);
  const noteStore = useSelector((state) => state.user.note);

  useLayoutEffect(() => {
    navigation.setOptions({
      title: 'یادداشت‌ها',
      headerRight: () => <BackButton navigation={navigation} />,
      headerLeft: () =>
        // <SearchBar
        //   undertxt="جستجو"
        //   onChangeText={_handleSearch}
        //   iconColor={COLOR.pink}
        // />
        null,
    });
  });

  useEffect(() => {
    if (noteStore) setNotes(Object.values(noteStore));
  }, [noteStore]);

  // useEffect(() => {
  //   const result = notes.filter((i) => {
  //     return (
  //       i.title.includes(searchInput) ||
  //       i.title.includes(e2p(searchInput)) ||
  //       i.title.includes(a2p(searchInput)) ||
  //       i.note.includes(searchInput) ||
  //       i.note.includes(e2p(searchInput)) ||
  //       i.note.includes(a2p(searchInput))
  //     );
  //   });
  //   setNotes(result);
  // }, [searchInput]);

  const _handleSearch = (text) => {
    if (text) {
      const result = notes.filter((i) => {
        return (
          i.title.includes(text) ||
          i.title.includes(e2p(text)) ||
          i.title.includes(a2p(text)) ||
          i.note.includes(text) ||
          i.note.includes(e2p(text)) ||
          i.note.includes(a2p(text))
        );
      });
      setNotes(result);
      console.log('result', result);
    } else setNotes(Object.values(noteStore));
  };

  const _renderItem = ({ item }) => {
    return <NoteListItem item={item} navigation={navigation} />;
  };

  // console.log('noteState', Object.values(noteState));

  return (
    <SafeAreaView style={{ flex: 1 }}>
      <SearchBar
        undertxt="جستجو"
        onChangeText={_handleSearch}
        // onChangeText={(text)=>{setSearchInput(text)}}
        iconColor={COLOR.pink}
      />
      <FlatList
        data={notes}
        renderItem={_renderItem}
        keyExtractor={(item, index) => index.toString()}
        ListEmptyComponent={() => {
          return <Text style={styles.txt}>هنوز یادداشتی ثبت نکرده‌اید.</Text>;
        }}
        showsVerticalScrollIndicator={false}
      />
      <FAB
        style={styles.fab}
        icon="plus"
        color={COLOR.white}
        onPress={() =>
          navigation.navigate('NoteEdit', {
            day: today,
            note: null,
          })
        }
      />
    </SafeAreaView>
  );
};
export default NotesList;
